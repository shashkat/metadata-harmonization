{
  "type": "excalidraw",
  "version": 2,
  "source": "https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor",
  "elements": [
    {
      "id": "Zvzjop5Ox_AiLHD2EuoEK",
      "type": "text",
      "x": 529.2339594864491,
      "y": 333.6711024652572,
      "width": 861.2376708984375,
      "height": 529.4016370584511,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a0",
      "roundness": null,
      "seed": 506819743,
      "version": 1267,
      "versionNonce": 2070402833,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743207188590,
      "link": null,
      "locked": false,
      "text": "step 0: look into the types of each col and ensure it is right to\nthe best degree. Especially need to distinguish categorical cols \nfrom string ones. This information will be used in following steps.\n\nstep 1: decide which columns map to which columns. For this, use \ninformation about col name, its type, and data. How data is used \nwould depend on the actual data type. Pay attention to negations \nhereSome columns in parent df may not have a direct mapping in \nchild df. In that case, maybe we would need some mutation on \nexisting columns in child df, or in worst case, simply put NA.\n\nstep 2: once the columns are decided (their types should be same \nat this point), we need special work for the case of categorical cols. \nGet the categories of such a col in the parent df, and forevery entry \nin the col mapped to it in child df, find the closest value, and call it \nthat. Set a threshold and give warnings for cases with value below \nthreshold. pay attention to negation values in this case too.",
      "fontSize": 24.913018214515343,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "step 0: look into the types of each col and ensure it is right to\nthe best degree. Especially need to distinguish categorical cols \nfrom string ones. This information will be used in following steps.\n\nstep 1: decide which columns map to which columns. For this, use \ninformation about col name, its type, and data. How data is used \nwould depend on the actual data type. Pay attention to negations \nhereSome columns in parent df may not have a direct mapping in \nchild df. In that case, maybe we would need some mutation on \nexisting columns in child df, or in worst case, simply put NA.\n\nstep 2: once the columns are decided (their types should be same \nat this point), we need special work for the case of categorical cols. \nGet the categories of such a col in the parent df, and forevery entry \nin the col mapped to it in child df, find the closest value, and call it \nthat. Set a threshold and give warnings for cases with value below \nthreshold. pay attention to negation values in this case too.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "eXyLpVj5S5vxg44G-TXZn",
      "type": "text",
      "x": 131.83568064125018,
      "y": 364.303334684989,
      "width": 340.41986083984375,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a1",
      "roundness": null,
      "seed": 395135679,
      "version": 47,
      "versionNonce": 731558079,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743207209990,
      "link": null,
      "locked": false,
      "text": "COLUMN TYPE IDENTIFICATION",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "COLUMN TYPE IDENTIFICATION",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "nXZNQwf0t4kQkmran55Oi",
      "type": "text",
      "x": 179.97283765357344,
      "y": 535.3659138754265,
      "width": 185.23989868164062,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a2",
      "roundness": null,
      "seed": 1175963249,
      "version": 73,
      "versionNonce": 1849175391,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743207257594,
      "link": null,
      "locked": false,
      "text": "COLUMN MAPPING",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "COLUMN MAPPING",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "qxk80wxxcHQV0mqtZ6sBW",
      "type": "text",
      "x": 118.40516865203494,
      "y": 736.0890022376307,
      "width": 334.599853515625,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a3",
      "roundness": null,
      "seed": 553419775,
      "version": 87,
      "versionNonce": 294652817,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1743207259913,
      "link": null,
      "locked": false,
      "text": "ENTRIES' VALUES ADJUSTMENT",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "ENTRIES' VALUES ADJUSTMENT",
      "autoResize": true,
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}